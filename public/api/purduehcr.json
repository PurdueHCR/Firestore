{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "PurdueHCR API",
    "contact" : {
      "email" : "purduehcr@gmail.com"
    },
    "version" : "1.0.0-oas3"
  },
  "servers" : [ {
    "url" : "https://us-central1-purdue-hcr-test.cloudfunctions.net",
    "description" : "Sandbox server (uses test data)"
  }, {
    "url" : "https://us-central1-hcr-points.cloudfunctions.net",
    "description" : "Production server (uses live data)"
  } ],
  "tags" : [ {
    "name" : "user"
  }, {
    "name" : "competition"
  }, {
    "name" : "link"
  }, {
    "name" : "reward"
  }, {
    "name" : "point_type"
  }, {
    "name" : "point_log"
  },{
    "name" : "house_codes"
  } ],
  "paths" : {

    "/house_codes/" : {
      "get" : {
        "tags" : [ "house_codes" ],
        "summary" : "Returns all house codes that is visible to the user.",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Bearer Firebase_ID_Token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "Bearer XXXXXXXXXXXXXXXXXXX"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties": {
                    "house_codes": {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/HouseCode"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "User Does Not Exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NonExistantUser"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized: Confirm The Token Is Valid.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "403" : {
            "description" : "Invalid Permission Level to access this endpoint.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvalidPermissionLevel"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },

    "/house_codes/refresh" : {
      "post" : {
        "tags" : [ "house_codes" ],
        "summary" : "Refresh the code field in the House Code models and generate a new dynamic link for it. If provided with an id in the body, this will only refresh the token on that House Code.",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Bearer Firebase_ID_Token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "Bearer XXXXXXXXXXXXXXXXXXX"
        } ],
        "requestBody" : {
          "description" : "Optional field to only refresh a single House Code",
          "content" : {
            "application/json" : {
              "schema" : {
                "properties": {
                  "id" : {
                    "type": "string",
                    "example": "329opc8dahl3fh"
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties": {
                    "house_codes": {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/HouseCode"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "User Does Not Exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NonExistantUser"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized: Confirm The Token Is Valid.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "403" : {
            "description" : "Invalid Permission Level to access this endpoint.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvalidPermissionLevel"
                }
              }
            }
          },
          "415" : {
            "description" : "The provided house code id does not match any code.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnknownHouseCodeId"
                }
              }
            }
          },
          "426" : {
            "description" : "The provided id was not in a supported format.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvalidDataFormat"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },

    "/user/auth-rank" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "Returns the user's overall house rank and semester rank.",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Bearer Firebase_ID_Token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "Bearer XXXXXXXXXXXXXXXXXXX"
        } ],
        "responses" : {
          "200" : {
            "description" : "A JSON object with the user's house rank and semester rank",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserRank"
                }
              }
            }
          },
          "400" : {
            "description" : "User Does Not Exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NonExistantUser"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized: Confirm The Token Is Valid.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/user/create" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "After a FirebaseUser account has been created, this will create the user model in the database",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Bearer Firebase_ID_Token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "Bearer XXXXXXXXXXXXXXXXXXX"
        }, {
          "name" : "first",
          "in" : "query",
          "description" : "The users preferred first name",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "John"
        }, {
          "name" : "last",
          "in" : "query",
          "description" : "The users preferred last name",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "Purdue"
        }, {
          "name" : "code",
          "in" : "query",
          "description" : "The user provided house code that will connect a user with a house",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "4N1234"
        } ],
        "responses" : {
          "200" : {
            "description" : "User was successfully created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized: Confirm The Token Is Valid.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "412" : {
            "description" : "User Already Exists",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserAlreadyExists"
                }
              }
            }
          },
          "422" : {
            "description" : "Missing required parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MissingRequiredParameters"
                }
              }
            }
          },
          "425" : {
            "description" : "House Code Does Not Exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HouseCodeDoesNotExist"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/user/get" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "Get the user model for the provided Firebase Token.",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Bearer Firebase_ID_Token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "Bearer XXXXXXXXXXXXXXXXXXX"
        } ],
        "responses" : {
          "200" : {
            "description" : "User that corresponds to the Firebase Token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          },
          "400" : {
            "description" : "User Does Not Exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NonExistantUser"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized: Confirm The Token Is Valid.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/user/submitPoint" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Submit a point log for a user",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Fields to submit a point log",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SubmittedPointLog"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The Point Log was successfully submitted for the resident and an approval request was sent to an RHP.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Success"
                }
              }
            }
          },
          "202" : {
            "description" : "The Point Log was successfully submitted and was automatically approved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Success"
                }
              }
            }
          },
          "400" : {
            "description" : "User Does Not Exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NonExistantUser"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized: Confirm The Token Is Valid.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "403" : {
            "description" : "Invalid Permission Level",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvalidPermissionLevel"
                }
              }
            }
          },
          "412" : {
            "description" : "House Competition is disabled.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CompetitionDisabled"
                }
              }
            }
          },
          "417" : {
            "description" : "Point Type does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PointTypeDoesNotExist"
                }
              }
            }
          },
          "418" : {
            "description" : "Point Type is disabled.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PointTypeDisabled"
                }
              }
            }
          },
          "419" : {
            "description" : "Users can not self submit this point type.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PointTypeSelfSubmissionDisabled"
                }
              }
            }
          },
          "422" : {
            "description" : "Required parameters are missing.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MissingRequiredParameters"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        }
      }
    },
    "/user/submitLink" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Submit a point through a link",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Fields to submit a point log",
          "content" : {
            "application/json" : {
              "schema" : {
                "properties": {
                  "link_id": {
                    "type" : "string",
                    "example" : "kPW2Qq2Mvsjrb3Lk9ulL"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The Point Log was successfully submitted for the resident and an approval request was sent to an RHP.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Success"
                }
              }
            }
          },
          "202" : {
            "description" : "The Point Log was successfully submitted and was automatically approved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Success"
                }
              }
            }
          },
          "400" : {
            "description" : "User Does Not Exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NonExistantUser"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized: Confirm The Token Is Valid.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "403" : {
            "description" : "Invalid Permission Level",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvalidPermissionLevel"
                }
              }
            }
          },
          "408" : {
            "description" : "There is no link with that Id",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LinkDoesntExist"
                }
              }
            }
          },
          "412" : {
            "description" : "House Competition is disabled.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CompetitionDisabled"
                }
              }
            }
          },
          "418" : {
            "description" : "Point Type is disabled.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PointTypeDisabled"
                }
              }
            }
          },
          "419" : {
            "description" : "Users can not self submit this point type.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PointTypeSelfSubmissionDisabled"
                }
              }
            }
          },
          "422" : {
            "description" : "Required parameters are missing.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MissingRequiredParameters"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        }
      }
    },
    "/user/links": {
      "get" : {
        "tags": [ "user"],
        "summary": "Get all links created by the given user",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Bearer Firebase_ID_Token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "Bearer XXXXXXXXXXXXXXXXXXX"
        } ],
        "responses": {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PointType"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "User Does Not Exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NonExistantUser"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized: Confirm the token is valid.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "403" : {
            "description" : "Invalid Permission Level -  This user does not have the ability to create Links.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvalidPermissionLevel"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/user/points" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "Get submitted point logs for the user",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        },
        {
          "name" : "limit",
          "in" : "query",
          "required": false,
          "style": "form",
          "explode": false,
          "schema" : {
            "type": "integer"
          }
        }
        ],
      
        "responses" : {
          "200" : {
            "description" : "Retrieved Point Logs",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties": {
                    "points": {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/PointLog"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "User Does Not Exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NonExistantUser"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized: Confirm The Token Is Valid.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "403" : {
            "description" : "Invalid Permission Level. Only Residents, RHPs, and Privileged Residents can get points",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvalidPermissionLevel"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        }
      }
    },
    "/competition/save-semester-points" : {
      "post" : {
        "tags" : [ "competition" ],
        "summary" : "Request a confirmation email sent to the user's account that contains information on how to save the current points total for all users. This can only be performed by an REA/REC.",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Bearer Firebase_ID_Token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "Bearer XXXXXXXXXXXXXXXXXXX"
        } ],
        "responses" : {
          "200" : {
            "description" : "Confirmation sent"
          },
          "401" : {
            "description" : "Unauthorized: Confirm the token is valid."
          },
          "409" : {
            "description" : "User does not have sufficient permissions to perform this action."
          },
          "410" : {
            "description" : "Undefined User Role"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        }
      }
    },
    "/competition/reset-house-competition" : {
      "post" : {
        "tags" : [ "competition" ],
        "summary" : "Request a confirmation email sent to the user's account that contains information on how to reset the house competition. This will delete all submitted points, delete all QR codes, delete all users, and reset house scores. This can only be performed by an REA/REC.",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Bearer Firebase_ID_Token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "Bearer XXXXXXXXXXXXXXXXXXX"
        } ],
        "responses" : {
          "200" : {
            "description" : "Confirmation sent"
          },
          "400" : {
            "description" : "User Does Not Exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NonExistantUser"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized: Confirm the token is valid."
          },
          "409" : {
            "description" : "User does not have sufficient permissions to perform this action."
          },
          "410" : {
            "description" : "Undefined User Role"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        }
      }
    },
    "/competition/history" : {
      "get" : {
        "tags" : [ "competition" ],
        "summary" : "Endpoint for Professional Staff and RHPs to view the history of submissions in their house.",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Bearer Firebase_ID_Token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "Bearer XXXXXXXXXXXXXXXXXXX"
        },{
          "name" : "type",
          "in" : "query",
          "description" : "Type of search to perform. {'recent','user','point_type'}.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "user"
        },{
          "name" : "last_name",
          "in" : "query",
          "description" : "Search term used for finding point submissions for users with the given last name. Required if the search type is 'user'.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "Doe"
        },{
          "name" : "point_type_id",
          "in" : "query",
          "description" : "Id for the point type to get submissions for. (Only applies when the type is 'point_type'. This will only find point submissions which were handled.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          },
          "example" : 2
        },{
          "name" : "date",
          "in" : "query",
          "description" : "Defines the date to get point submissions that occurred on or before. (Only applies when the type is 'recent'.)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "8/24/2020"
        },{
          "name" : "startAt",
          "in" : "query",
          "description" : "Oldest date returned in the previous query. This is used for pagination.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "4/19/2020"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties": {
                    "point_logs": {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/PointLog"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "User Does Not Exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NonExistantUser"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized: Confirm the token is valid.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "403" : {
            "description" : "Invalid Permission Level",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvalidPermissionLevel"
                }
              }
            }
          },
          "422" : {
            "description" : "Missing required parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MissingRequiredParameters"
                }
              }
            }
          },
          "423" : {
            "description" : "Could not interpret the provided date",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvalidDateFormat"
                }
              }
            }
          },
          "425" : {
            "description" : "The provided house name is incorrect.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnknownHouse"
                }
              }
            }
          },
          "426" : {
            "description" : "At least one of the parameters you provided was in an incorrect format.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvalidDataFormat"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/competition/getUnhandledPoints" : {
      "get" : {
        "tags" : [ "competition" ],
        "summary" : "For an RA, get all unhandled points for your house",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Bearer Firebase_ID_Token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "Bearer XXXXXXXXXXXXXXXXXXX"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties": {
                    "point_logs": {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/PointLog"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "User Does Not Exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NonExistantUser"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized: Confirm the token is valid.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "403" : {
            "description" : "Invalid Permission Level",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvalidPermissionLevel"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/competition/userOverview" : {
      "get" : {
        "tags" : [ "competition" ],
        "summary" : "Get the data that is most pertinent to the given user.",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Bearer Firebase_ID_Token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "Bearer XXXXXXXXXXXXXXXXXXX"
        } ],
        "responses" : {
          "200" : {
            "description" : "The data will populate the corresponding User Type field in the response. The other User Types will not exist in the response body.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties": {
                    "resident": {
                      "$ref" : "#/components/schemas/ResidentOverview"
                    },
                    "rhp": {
                      "$ref" : "#/components/schemas/RHPOverview"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "User Does Not Exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NonExistantUser"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized: Confirm the token is valid.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/link/" : {
      "get" : {
        "tags" : [ "link" ],
        "summary" : "Get a specific Link",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Bearer Firebase_ID_Token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "Bearer XXXXXXXXXXXXXXXXXXX"
        },{
          "name" : "id",
          "in" : "query",
          "description" : "Id  for the link",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "ed3rodsaw34fnbjdla"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Link"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized: Confirm the token is valid.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "408" : {
            "description" : "Link Doesnt Exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LinkDoesntExist"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/link/create" : {
      "post" : {
        "tags" : [ "link" ],
        "summary" : "Create a Link",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Bearer Firebase_ID_Token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "Bearer XXXXXXXXXXXXXXXXXXX"
        } ],
        "requestBody" : {
          "description" : "Required parameters to update the link",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LinkCreation"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Success"
                }
              }
            }
          },
          "400" : {
            "description" : "User Doesn't exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NonExistantUser"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized: Confirm the token is valid.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "403" : {
            "description" : "Invalid Permissions. Residents can't create Links.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvalidPermissionLevel"
                }
              }
            }
          },
          "417" : {
            "description" : "Unknown Point Type.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PointTypeDoesNotExist"
                }
              }
            }
          },
          "418" : {
            "description" : "Point Type Disabled.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PointTypeDisabled"
                }
              }
            }
          },
          "422" : {
            "description" : "Missing Required Parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MissingRequiredParameters"
                }
              }
            }
          },
          "430" : {
            "description" : "User does not have high enough permissions to use this point type to create a link.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InsufficientPointTypePermissionForLink"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/link/update" : {
      "put" : {
        "tags" : [ "link" ],
        "summary" : "Update a Link",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Bearer Firebase_ID_Token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "Bearer XXXXXXXXXXXXXXXXXXX"
        } ],
        "requestBody" : {
          "description" : "Body sent to update the link. Only id is required. The other parameters are optional.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LinkUpdate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Success"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized: Confirm the token is valid.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "407" : {
            "description" : "Link Doesn't Belong to User",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LinkDoesntBelongToUser"
                }
              }
            }
          },
          "408" : {
            "description" : "Link Doesn't Exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LinkDoesntExist"
                }
              }
            }
          },
          "422" : {
            "description" : "Missing required parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MissingRequiredParameters"
                }
              }
            }
          },
          "426" : {
            "description" : "Description Can not be empty",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvalidDataFormat"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/point_type/": {
      "get" : {
        "tags": [ "point_type"],
        "summary": "Route for professional staff to get all point types",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Bearer Firebase_ID_Token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "Bearer XXXXXXXXXXXXXXXXXXX"
        } ],
        "responses": {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties": {
                    "point_types": {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/PointType"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "User Does Not Exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NonExistantUser"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized: Confirm the token is valid.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "403" : {
            "description" : "Invalid Permission Level -  Only Professional Staf can access this endpoint.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvalidPermissionLevel"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags": [ "point_type"],
        "summary": "Route for professional staff to update a point type",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Bearer Firebase_ID_Token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "Bearer XXXXXXXXXXXXXXXXXXX"
        } ],
        "requestBody" : {
          "description" : "Parameters to update a point type. Id is the only required parameters",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PointType"
              }
            }
          },
          "required" : true
        },
        "responses": {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Success"
                }
              }
            }
          },
          "400" : {
            "description" : "User Does Not Exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NonExistantUser"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized: Confirm the token is valid.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "403" : {
            "description" : "Invalid Permission Level -  Only Professional Staf can access this endpoint.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvalidPermissionLevel"
                }
              }
            }
          },
          "417" : {
            "description" : "The Id provided for the point type was not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PointTypeDoesNotExist"
                }
              }
            }
          },
          "422" : {
            "description" : "An id must be provided as well as at least one of the other parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MissingRequiredParameters"
                }
              }
            }
          },
          "426" : {
            "description" : "One or more of your fields were either empty or in a format that couldn't be understood for the required data type.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvalidDataFormat"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags": [ "point_type"],
        "summary": "Route for professional staff to create a point type",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Bearer Firebase_ID_Token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "Bearer XXXXXXXXXXXXXXXXXXX"
        } ],
        "requestBody" : {
          "description" : "Parameters to update a point type. ",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PointTypeWithoutId"
              }
            }
          },
          "required" : true
        },
        "responses": {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PointType"
                }
              }
            }
          },
          "400" : {
            "description" : "User Does Not Exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NonExistantUser"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized: Confirm the token is valid.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "403" : {
            "description" : "Invalid Permission Level -  Only Professional Staf can access this endpoint.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvalidPermissionLevel"
                }
              }
            }
          },
          "422" : {
            "description" : "An id must be provided as well as at least one of the other parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MissingRequiredParameters"
                }
              }
            }
          },
          "426" : {
            "description" : "One or more of your fields were either empty or in a format that couldn't be understood for the required data type.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvalidDataFormat"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/point_type/submittable": {
      "get" : {
        "tags": [ "point_type"],
        "summary": "Returns all the point types which can be used to create a submission for the given user",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Bearer Firebase_ID_Token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "Bearer XXXXXXXXXXXXXXXXXXX"
        } ],
        "responses": {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties": {
                    "point_types": {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/PointType"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "User Does Not Exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NonExistantUser"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized: Confirm the token is valid.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/point_type/linkable": {
      "get" : {
        "tags": [ "point_type"],
        "summary": "Returns all the point types which can be used to create a link or QR code.",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Bearer Firebase_ID_Token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "Bearer XXXXXXXXXXXXXXXXXXX"
        } ],
        "responses": {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties": {
                    "point_types": {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/PointType"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "User Does Not Exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NonExistantUser"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized: Confirm the token is valid.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/reward/" : {
      "get" : {
        "tags" : [ "reward" ],
        "summary" : "If given an Id,  get the reward with that Id, otherwise get all the rewards",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Bearer Firebase_ID_Token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "Bearer XXXXXXXXXXXXXXXXXXX"
        }, {
          "name" : "id",
          "in" : "query",
          "description" : "Id  for the reward",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "Ice Cream Party"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties": {
                    "rewards": {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Reward"
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized: Confirm The Token Is Valid.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "420" : {
            "description" : "Could not find the reward with the given Id",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnknownReward"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/point_log/messages" : {
      "post" : {
        "tags" : [ "point_log" ],
        "summary" : "Post a new message to the point log",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Bearer Firebase_ID_Token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "Bearer XXXXXXXXXXXXXXXXXXX"
          }
        ],
        "requestBody" : {
          "description" : "Required parameters to post a message",
          "content" : {
            "application/json" : {
              "schema" : {
                "properties": {
                  "log_id" : {
                    "type": "string",
                    "example": "329opc8dahl3fh"
                  },
                  "message" : {
                    "type": "string",
                    "example": "Good Job on the submission"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Message Successfully Saved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Success"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized: Confirm the token is valid.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "427" : {
            "description" : "Can Not Post Message -  The user can not post a message to this point log",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CanNotPostMessage"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "point_log" ],
        "summary" : "Get all messages for a point log in chronological order",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Bearer Firebase_ID_Token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "Bearer XXXXXXXXXXXXXXXXXXX"
          },{
            "name" : "log_id",
            "in" : "query",
            "description" : "Id  for the point log",
            "required" : true,
            "style" : "form",
            "explode" : true,
            "schema" : {
              "type" : "string"
            },
            "example" : "aljk3p890dchjvo2"
          } 
        ],
        "responses" : {
          "200" : {
            "description" : "Message Successfully Saved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Success"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized: Confirm the token is valid.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "403" : {
            "description" : "This user can not view or edit Point log messages.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvalidPermissionLevel"
                }
              }
            }
          },
          "413" : {
            "description" : "Could not find the point log",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnknownPointLog"
                }
              }
            }
          },
          "431" : {
            "description" : "The User does not have permission to modify or view this point log.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CanNotAccessPointLog"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "UserRank" : {
        "type" : "object",
        "properties" : {
          "houseRank" : {
            "type" : "integer",
            "example" : 2
          },
          "semesterRank" : {
            "type" : "integer",
            "example" : 22
          }
        }
      },
      "User" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "23p9vd123iohfds09aserh"
          },
          "firstName" : {
            "type" : "string",
            "example" : "Mitch"
          },
          "lastName" : {
            "type" : "string",
            "example" : "Daniels"
          },
          "floorId" : {
            "type" : "string",
            "example" : "4N"
          },
          "house" : {
            "type" : "string",
            "example" : "Platinum"
          },
          "semesterPoints" : {
            "type" : "integer",
            "example" : 200
          },
          "totalPoints" : {
            "type" : "integer",
            "example" : 325
          },
          "permissionLevel" : {
            "type" : "integer",
            "example" : 0
          }
        }
      },
      "House" : {
        "type" : "object",
        "properties" : {
          "color" : {
            "type" : "string",
            "example" : "#F8971C"
          },
          "numberOfResidents" : {
            "type" : "number",
            "example" : 178
          },
          "totalPoints" : {
            "type" : "number",
            "example" : 6010
          },
          "id" : {
            "type" : "string",
            "example" : "Platinum"
          },
          "pointsPerResident" : {
            "type" : "number",
            "example" : 33.76
          }
        }
      },
      "HouseCode" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "example" : "4S1234"
          },
          "codeName" : {
            "type" : "string",
            "example" : "4S Resident"
          },
          "floorId" : {
            "type" : "string",
            "example" : "4S"
          },
          "House" : {
            "type" : "string",
            "example" : "Platinum"
          },
          "permissionLevel" : {
            "type" : "integer",
            "example" : 0
          }
        }
      },
      "LinkCreation" : {
        "type" : "object",
        "properties" : {
          "single_use" : {
            "type" : "boolean",
            "example" : false
          },
          "point_id" : {
            "type" : "integer",
            "example" : 1
          },
          "description" : {
            "type" : "string",
            "example" : "House event on 2/26/2020"
          }
        }
      },
      "Link" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 1
          },
          "enabled" : {
            "type" : "boolean",
            "example" : false
          },
          "archived" : {
            "type" : "boolean",
            "example" : false
          },
          "creatorId" : {
            "type" : "string",
            "example" : "124rfdsq23fas"
          },
          "description" : {
            "type" : "string",
            "example" : "House event on 2/26/2020"
          },
          "pointId" : {
            "type" : "integer",
            "example" : 1
          },
          "pointTypeName" : {
            "type" : "string",
            "example" : "Point Type for events"
          },
          "pointTypeDescription" : {
            "type" : "string",
            "example" : "You can submit this point for events."
          },
          "pointTypeValue" : {
            "type" : "integer",
            "example" : "100"
          },
          "singleUse" : {
            "type" : "boolean",
            "example" : false
          }
        }
      },
      "LinkUpdate" : {
        "type" : "object",
        "properties" : {
          "link_id" : {
            "type" : "integer",
            "example" : 1
          },
          "enabled" : {
            "type" : "boolean",
            "example" : false
          },
          "archived" : {
            "type" : "boolean",
            "example" : false
          },
          "description" : {
            "type" : "string",
            "example" : "House event on 2/26/2020"
          },
          "singleUse" : {
            "type" : "boolean",
            "example" : false
          }
        }
      },
      "Reward" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "Ice Cream"
          },
          "fileName" : {
            "type" : "string",
            "example" : "IceCream.png"
          },
          "requiredPPR" : {
            "type" : "number",
            "example" : 45
          },
          "requiredValue" : {
            "type" : "number",
            "example" : 4000
          }
        }
      },
      "SubmittedPointLog" : {
        "type" : "object",
        "properties" : {
          "date_occured" : {
            "$ref" : "#/components/schemas/DateTime"
          },
          "description" : {
            "type" : "string",
            "example" : "Attend a House Dinner!"
          },
          "point_type_id" : {
            "type" : "number",
            "example" : 5
          }
        }
      },
      "PointLog" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "2d2jds3lbjfo48gcxz"
          },
          "approvedBy" : {
            "type" : "string",
            "example" : "John Sampleman"
          },
          "approvedOn" : {
            "$ref" : "#/components/schemas/DateTime"
          },
          "dateOccurred" : {
            "$ref" : "#/components/schemas/DateTime"
          },
          "dateSubmitted" : {
            "$ref" : "#/components/schemas/DateTime"
          },
          "description" : {
            "type" : "string",
            "example" : "Attend a House Dinner!"
          },
          "floorID" : {
            "type" : "string",
            "example" : "4N"
          },
          "pointTypeID" : {
            "type" : "number",
            "example" : 5
          },
          "rhpNotifications" : {
            "type" : "number",
            "example" : 2
          },
          "residentFirstName" : {
            "type" : "string",
            "example" : "Thomas"
          },
          "residentId" : {
            "type" : "string",
            "example" : "23ofia03jgalsDGb0e"
          },
          "residentLastName" : {
            "type" : "string",
            "example" : "Mustermann"
          },
          "residentNotifications" : {
            "type" : "number",
            "example" : 0
          }
        }
      },
      "PointType" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "5"
          },
          "description" : {
            "type" : "string",
            "example" : "Attend a House Dinner"
          },
          "enabled" : {
            "type" : "boolean",
            "example" : true
          },
          "name" : {
            "type" : "string",
            "example" : "House Dinner"
          },
          "permissionLevel" : {
            "type" : "number",
            "example" : 1
          },
          "residentsCanSubmit" : {
            "type" : "boolean",
            "example" : true
          },
          "value" : {
            "type" : "number",
            "example" : 1
          }
        }
      },
      "PointTypeWithoutId" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "example" : "Attend a House Dinner"
          },
          "enabled" : {
            "type" : "boolean",
            "example" : true
          },
          "name" : {
            "type" : "string",
            "example" : "House Dinner"
          },
          "permissionLevel" : {
            "type" : "number",
            "example" : 1
          },
          "residentsCanSubmit" : {
            "type" : "boolean",
            "example" : true
          },
          "value" : {
            "type" : "number",
            "example" : 1
          }
        }
      },
      "ResidentOverview" : {
        "type" : "object",
        "properties" : {
          "user_rank" : {
            "$ref" : "#/components/schemas/UserRank"
          },
          "houses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/House"
            }
          },
          "next_reward" : {
            "$ref" : "#/components/schemas/Reward"
          },
          "last_submissions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PointLog"
            }
          }
        }
      },
      "RHPOverview" : {
        "type" : "object",
        "properties" : {
          "user_rank" : {
            "$ref" : "#/components/schemas/UserRank"
          },
          "houses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/House"
            }
          },
          "next_reward" : {
            "$ref" : "#/components/schemas/Reward"
          },
          "last_submissions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PointLog"
            }
          }
        }
      },
      "Success" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "example" : "Success"
          }
        }
      },
      "DateTime" : {
        "type" : "object",
        "properties" : {
          "_seconds" : {
            "type" : "number",
            "example" : 156463200
          },
          "_nanoseconds" : {
            "type" : "number",
            "example" : 0
          }
        }
      },
      "NonExistantUser" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "example" : "User Does Not Exist"
          }
        }
      },
      "Unauthorized" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "example" : "Unauthroized: Confirm The Token Is Valid"
          }
        }
      },
      "InvalidPermissionLevel" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "example" : "This User does not have the correct permission levels."
          }
        }
      },
      "LinkDoesntBelongToUser" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "example" : "This Link doesnt belong to the user"
          }
        }
      },
      "LinkDoesntExist" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "example" : "This Link doesnt exist"
          }
        }
      },
      "LinkAlreadySubmitted" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "example" : "The Link Has Already Been Submitted"
          }
        }
      },
      "HouseCodeDoesNotExist" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "example" : "House Code Does Not Exist"
          }
        }
      },
      "CompetitionDisabled" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "example" : "House Competition Is Disabled"
          }
        }
      },
      "UnknownPointLog" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "example" : "Could not find Point Log"
          }
        }
      },
      "PointTypeDoesNotExist" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "example" : "Unknown Point Type"
          }
        }
      },
      "PointTypeDisabled" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "example" : "Point Type Is Disabled"
          }
        }
      },
      "PointTypeSelfSubmissionDisabled" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "example" : "User Can Not Self Submit This Point Type"
          }
        }
      },
      "UnknownReward" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "example" : "Unknown Reward"
          }
        }
      },
      "UserAlreadyExists" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "example" : "User Already Exists"
          }
        }
      },
      "MissingRequiredParameters" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "example" : "Missing required parameters"
          }
        }
      },
      "InvalidDateFormat" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "example" : "Could Not Parse Date Format"
          }
        }
      },
      "DateNotInRange" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "example" : "Date Is Not Allowed"
          }
        }
      },
      "UnknownHouse" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "example" : "Unknown House"
          }
        }
      },
      "UnknownHouseCodeId" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "example" : "There is no House Code with the provided id. Make sure you use the Id field of the House Code and not the code field."
          }
        }
      },
      "InvalidDataFormat" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "example" : "Data provided is in the incorrect format."
          }
        }
      },
      "CanNotPostMessage" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "example" : "You can not post a message to this submission"
          }
        }
      },
      "InsufficientPointTypePermissionForLink" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "example" : "User does not have sufficient permissions to use that Point Type in a Link."
          }
        }
      },
      "CanNotAccessPointLog" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "example" : "This user does not have the corrent ownership or permission to access this point log."
          }
        }
      },
      
      "ServerError" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "example" : "Server Error"
          }
        }
      }
    }
  }
}